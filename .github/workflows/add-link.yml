name: Add link from issue
on:
  issues:
    types: [opened, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  add:
    if: contains(github.event.issue.labels.*.name, 'add-link')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update links.json
        env:
          BODY: ${{ github.event.issue.body }}
          TITLE: ${{ github.event.issue.title }}
        run: |
          node - <<'NODE'
          const fs = require('fs');

          const body = process.env.BODY || "";
          const title = process.env.TITLE || "";

          // Try to read values from Issue Forms (### Heading\nValue)
          function getByHeading(label) {
            const re = new RegExp(`###\\s*${label}\\s*\\n([\\s\\S]*?)(?=\\n###|$)`, 'i');
            const m = body.match(re);
            return m ? m[1].trim() : '';
          }
          // Fallback for plain markdown: "Label: value"
          function getByColon(label) {
            const re = new RegExp(`^\\s*\\**${label}\\**\\s*:\\s*(.+)$`, 'im');
            const m = body.match(re);
            return m ? m[1].trim() : '';
          }

          let section = getByHeading('Section') || getByColon('Section');
          let label   = getByHeading('Label')   || getByColon('Label');
          let url     = getByHeading('URL')     || getByColon('URL');

          // Last-chance: if URL is in the title
          if (!url) {
            const mt = title.match(/https?:\/\/\S+/i);
            if (mt) url = mt[0];
          }

          if (!section || !label || !url) {
            throw new Error('Missing Section, Label, or URL in the issue form.');
          }

          const path = 'links.json';
          if (!fs.existsSync(path)) throw new Error('links.json not found at repo root.');
          const data = JSON.parse(fs.readFileSync(path, 'utf8'));

          // Ensure section object exists
          if (!data[section] || typeof data[section] !== 'object' || Array.isArray(data[section])) {
            data[section] = {};
          }
          const sec = data[section];

          // Avoid duplicates by URL
          const exists = Object.entries(sec).find(([k,v]) => String(v).trim() === url.trim());
          if (!exists) {
            let finalLabel = label.trim();
            let n = 2;
            while (Object.prototype.hasOwnProperty.call(sec, finalLabel) && sec[finalLabel] !== url) {
              finalLabel = `${label} (${n++})`;
            }
            sec[finalLabel] = url;

            // Keep section keys sorted
            data[section] = Object.fromEntries(Object.entries(sec).sort((a,b) => a[0].localeCompare(b[0])));
          } else {
            console.log(`URL already exists in section "${section}" under label "${exists[0]}".`);
          }

          fs.writeFileSync(path, JSON.stringify(data, null, 2) + '\n');
          NODE

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: add link via issue #${{ github.event.issue.number }}"
          title: "Add link from issue #${{ github.event.issue.number }}"
          branch: "bot/add-link-${{ github.event.issue.number }}"
          body: "Updates links.json based on issue #${{ github.event.issue.number }}."
          labels: add-link
