name: Add link from issue
on:
  issues:
    types: [labeled]

# Settings → Actions → General → Workflow permissions → set to "Read and write"
permissions:
  contents: write
  pull-requests: write

jobs:
  add:
    if: contains(github.event.issue.labels.*.name, 'add-link')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Update links.json
        env:
          BODY: ${{ github.event.issue.body }}
        run: |
          node - <<'NODE'
          const fs = require('fs');

          const body = process.env.BODY || "";

          // Extract Issue Form values from the rendered markdown:
          // The form renders as headings like "### Section", then the value on the next line(s).
          function field(label) {
            const re = new RegExp(`###\\s*${label}\\s*\\n([\\s\\S]*?)(?=\\n###|$)`, 'i');
            const m = body.match(re);
            return m ? m[1].trim() : '';
          }

          const section = field('Section');
          const label   = field('Label');
          const url     = field('URL');

          if (!section || !label || !url) {
            throw new Error('Missing Section, Label, or URL in the issue form.');
          }

          const path = 'links.json';
          if (!fs.existsSync(path)) throw new Error('links.json not found at repo root.');
          const data = JSON.parse(fs.readFileSync(path, 'utf8'));

          // Ensure the section exists and is an object
          if (!data[section] || typeof data[section] !== 'object' || Array.isArray(data[section])) {
            data[section] = {};
          }

          const sec = data[section];

          // Avoid duplicates: if same URL already present under any label in section, skip
          const already = Object.entries(sec).find(([k, v]) => String(v).trim() === url.trim());
          if (already) {
            console.log(`URL already exists in section "${section}" under label "${already[0]}". Skipping add.`);
          } else {
            // If label exists with a different URL, append a unique suffix
            let finalLabel = label;
            let i = 2;
            while (Object.prototype.hasOwnProperty.call(sec, finalLabel) && sec[finalLabel] !== url) {
              finalLabel = `${label} (${i++})`;
            }
            sec[finalLabel] = url;

            // Optional: keep labels sorted alphabetically for neat diffs
            const sorted = Object.fromEntries(Object.entries(sec).sort((a, b) => a[0].localeCompare(b[0])));
            data[section] = sorted;
          }

          fs.writeFileSync(path, JSON.stringify(data, null, 2) + '\n');
          NODE

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: add link via issue #${{ github.event.issue.number }}"
          title: "Add link from issue #${{ github.event.issue.number }}"
          branch: "bot/add-link-${{ github.event.issue.number }}"
          body: |
            Adds/updates links in `links.json` based on issue #${{ github.event.issue.number }}.
            (Section/Label/URL taken from the Issue Form.)
          labels: add-link
